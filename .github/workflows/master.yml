name: Release

on:
  release:
    # We'll run this workflow when a new GitHub release is created
    types: [released]

jobs:
  build:
    name: Build and execute tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: 11
        server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: OSSRH_USERNAME # env variable for username in deploy
        server-password: OSSRH_PASSWORD # env variable for token in deploy
        gpg-private-key: ${{ secrets.SIGNING_KEY }} # Value of the GPG private key to import
        gpg-passphrase: SIGNING_PASSWORD # env variable for GPG private key passphrase

    - name: Run tests
      run: |
        mvn clean jacoco:prepare-agent install jacoco:report -P !build-extras
        mvn site -Djacoco.skip -DskipTests -P !build-extras        

    - name: Setup sonarqube
      uses: warchant/setup-sonar-scanner@v3

    - name: Send to sonarqube
      env:
        # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: sonar-scanner
           -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Deploy to GitHub Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: ./target/site
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to maven central
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
      run: mvn deploy nexus-staging:rc-release -P sign,build-extras --settings mvnsettings.xml -DskipTests
