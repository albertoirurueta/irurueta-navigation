package com.irurueta.navigation.inertial.calibration;

import com.irurueta.navigation.inertial.BodyKinematics;

/**
 * Listener to handle events generated by {@link RandomWalkEstimator}
 */
public interface RandomWalkEstimatorListener {

    /**
     * Called when estimation starts.
     *
     * @param estimator estimator that raised the event.
     */
    void onStart(final RandomWalkEstimator estimator);

    /**
     * Called when a measured body kinematics sample is added containing new
     * measured accelerometer and gyroscope measures.
     *
     * @param estimator estimator that raised the event.
     * @param measuredKinematics measured kinematics being added.
     * @param fixedKinematics fixed kinematics taking into account calibration data.
     */
    void onBodyKinematicsAdded(final RandomWalkEstimator estimator,
                               final BodyKinematics measuredKinematics,
                               final BodyKinematics fixedKinematics);

    /**
     * Called when estimation is reset.
     *
     * @param estimator estimator that raised the event.
     */
    void onReset(final RandomWalkEstimator estimator);
}
