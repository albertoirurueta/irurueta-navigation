/*
 * Copyright (C) 2020 Alberto Irurueta Carro (alberto@irurueta.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.irurueta.navigation.inertial.calibration;

import com.irurueta.units.Measurement;

/**
 * Interface defining events generated by {@link TriadStaticIntervalDetector}.
 *
 * @param <U> type of unit.
 * @param <M> a type of measurement.
 * @param <T> a triad type.
 * @param <D> a detector type.
 */
public interface TriadStaticIntervalDetectorListener<U extends Enum<?>, M extends Measurement<U>,
        T extends Triad<U, M>, D extends TriadStaticIntervalDetector<U, M, T, D, ?>> {

    /**
     * Called when initial static period starts so that base noise level
     * starts being estimated.
     *
     * @param detector detector that raised the event.
     */
    void onInitializationStarted(final D detector);

    /**
     * Called when initial static period successfully completes and base
     * noise level is estimated so that static and dynamic periods can be
     * detected.
     *
     * @param detector       detector that raised the event.
     * @param baseNoiseLevel base measurement noise level expressed in meters per squared second (m/s^2) for
     *                       acceleration, radians per second (rad/s) for angular speed or Teslas (T) for magnetic
     *                       flux density.
     */
    void onInitializationCompleted(final D detector, final double baseNoiseLevel);

    /**
     * Called when an error is detected during initialization because there has been
     * excessive movement forces.
     *
     * @param detector                detector that raised the event.
     * @param accumulatedNoiseLevel   accumulated noise level expressed in meters per squared second (m/s^2) for
     *                                acceleration, radians per second (rad/s) for angular speed or Teslas (T) for
     *                                magnetic flux density.
     * @param instantaneousNoiseLevel instantaneous noise level expressed in meters per squared second (m/s^2) for
     *                                acceleration, radians per second (rad/s) for angular speed or Teslas (T) for
     *                                magnetic flux density.
     * @param reason                  reason why error was detected.
     */
    void onError(final D detector, final double accumulatedNoiseLevel, final double instantaneousNoiseLevel,
                 final TriadStaticIntervalDetector.ErrorReason reason);

    /**
     * Called when a static interval has been detected after initialization.
     *
     * @param detector detector that raised the event.
     */
    void onStaticIntervalDetected(final D detector);

    /**
     * Called when a dynamic interval has been detected after initialization.
     *
     * @param detector detector that raised the event.
     * @param avgX     average x-coordinate of measurements during last
     *                 static period expressed in meters per squared
     *                 second (m/s^2) for acceleration, radians per second
     *                 (rad/s) for angular speed or Teslas (T) for magnetic
     *                 flux density.
     * @param avgY     average y-coordinate of specific force during last
     *                 static period expressed in meters per squared
     *                 second (m/s^2) for acceleration, radians per second
     *                 (rad/s) for angular speed or Teslas (T) for magnetic
     *                 flux density.
     * @param avgZ     average z-coordinate of specific force during last
     *                 static period expressed in meters per squared
     *                 second (m/s^2) for acceleration, radians per second
     *                 (rad/s) for angular speed or Teslas (T) for magnetic
     *                 flux density.
     */
    void onDynamicIntervalDetected(final D detector,
                                   final double avgX,
                                   final double avgY,
                                   final double avgZ);

    /**
     * Called when detector is reset.
     *
     * @param detector detector that raised the event.
     */
    void onReset(final D detector);
}
